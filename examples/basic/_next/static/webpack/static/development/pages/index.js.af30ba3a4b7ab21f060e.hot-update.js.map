{"version":3,"file":"static/webpack/static/development/pages/index.js.af30ba3a4b7ab21f060e.hot-update.js","sources":["webpack:///./components/Topbar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, FormControlLabel, Switch, Grid, Button as MaterialButton, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, TextField, Snackbar } from \"@material-ui/core\";\nimport { useEditor } from \"@craftjs/core\";\nimport lz from \"lzutf8\";\nimport copy from 'copy-to-clipboard';\n\nexport const Topbar = ({reset}) => {\n  const { actions, query, enabled } = useEditor((state) => ({\n    enabled: state.options.enabled\n  }));\n\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState();\n\n  return (\n    <Box px={1} py={1} mt={3} mb={1} bgcolor=\"#cbe8e7\">\n      <Grid container alignItems=\"center\">\n        <Grid item xs>\n          <FormControlLabel\n            control={<Switch checked={enabled} onChange={(_, value) => actions.setOptions(options => options.enabled = value)} />}\n            label=\"Enable\"\n          />\n        </Grid>\n        <Grid item>\n        <MaterialButton \n            size=\"small\" \n            variant=\"outlined\" \n            color=\"secondary\"\n            style={{marginRight: \"10px\"}}\n            onClick={() => {\n              const json = query.serialize();\n              const uint8array = lz.compress(json);\n              const base64 = lz.encodeBase64(uint8array);\n              copy(base64);\n              setSnackbarMessage(\"State copied to clipboard\")\n            }}\n          >\n              Copy current state\n          </MaterialButton>\n          <MaterialButton \n            size=\"small\" \n            variant=\"outlined\" \n            color=\"secondary\"\n            onClick={() => setDialogOpen(true)}\n          >\n              Load\n          </MaterialButton>\n          <Dialog\n            open={dialogOpen}\n            onClose={() => setDialogOpen(false)}\n            fullWidth\n            maxWidth=\"md\"\n          >\n            <DialogTitle id=\"alert-dialog-title\">Load state</DialogTitle>\n            <DialogContent>\n              <TextField \n                multiline \n                fullWidth\n                placeholder='Paste the contents that was copied from the \"Copy Current State\" button'\n                size=\"small\"\n              />\n            </DialogContent>\n            <DialogActions>\n              <MaterialButton onClick={() => setDialogOpen(false)} color=\"primary\">\n                Cancel\n              </MaterialButton>\n              <MaterialButton onClick={() => setDialogOpen(false)} color=\"primary\" autoFocus>\n                Load\n              </MaterialButton>\n            </DialogActions>\n          </Dialog>\n          <Snackbar\n            anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n            open={!!snackbarMessage}\n            onClose={() => setSnackbar(false)}\n            message={<span id=\"message-id\">{snackbarMessage}</span>}\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  )\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AADA;AACA;AACA;AADA;AAAA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;A","sourceRoot":""}